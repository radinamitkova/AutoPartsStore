DROP TABLE users;
DROP TABLE products;
DROP TABLE storage;
DROP TABLE shop;
DROP TABLE orders;

CREATE TABLE users
(
    id       VARCHAR(45) UNIQUE NOT NULL,
    name     VARCHAR(40)        NOT NULL,
    username VARCHAR(40) UNIQUE NOT NULL,
    password VARCHAR(70)        NOT NULL,
    role     VARCHAR(20)        NOT NULL,
    money    NUMBER(10,2) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE users
    ADD CONSTRAINT role_constraint CHECK (role IN ('CLIENT', 'OWNER'));

CREATE TABLE products
(
    product_id VARCHAR(20) UNIQUE NOT NULL,
    car_brand  VARCHAR(30)        NOT NULL,
    price      NUMBER(10,2) NOT NULL,
    storage_id NUMBER             NOT NULL,
    shop_id    NUMBER             NOT NULL,
    PRIMARY KEY (product_id)
);

CREATE TABLE storage
(
    id         NUMBER GENERATED BY DEFAULT AS IDENTITY,
    product_id VARCHAR(20) UNIQUE NOT NULL,
    capacity   int,
    stock      int,
    PRIMARY KEY (id),
    FOREIGN KEY (product_id) REFERENCES products (product_id)
);

CREATE TABLE shop
(
    id         NUMBER GENERATED BY DEFAULT AS IDENTITY,
    owner_id   VARCHAR(45) NOT NULL,
    storage_id NUMBER      NOT NULL,
    name       VARCHAR(30) NOT NULL,
    budget     NUMBER(10,2) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (owner_id) REFERENCES users (id),
    FOREIGN KEY (storage_id) REFERENCES storage (id)
);

ALTER TABLE products
    ADD FOREIGN KEY (storage_id) REFERENCES storage (id);
ALTER TABLE products
    ADD FOREIGN KEY (shop_id) REFERENCES shop (id);

CREATE TABLE orders
(
    order_id   VARCHAR(20) UNIQUE NOT NULL,
    client_id  VARCHAR(45)        NOT NULL,
    product_id VARCHAR(20)        NOT NULL,
    amount     int                NOT NULL,
    price      NUMBER(10,2) NOT NULL,
    order_date DATE               NOT NULL
);

ALTER TABLE orders
    ADD FOREIGN KEY (client_id) REFERENCES users (id);
ALTER TABLE orders
    ADD FOREIGN KEY (product_id) REFERENCES products (product_id);
ALTER TABLE orders
    ADD PRIMARY KEY (order_id);


